// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/cmp-keygen.proto

package keygen

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents Frost's keygen message 1.
type Broadcast2 struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This message should be reliably broadcasted.
	Commitment    []byte `protobuf:"bytes,1,opt,name=Commitment,proto3" json:"Commitment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Broadcast2) Reset() {
	*x = Broadcast2{}
	mi := &file_proto_cmp_keygen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Broadcast2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broadcast2) ProtoMessage() {}

func (x *Broadcast2) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmp_keygen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broadcast2.ProtoReflect.Descriptor instead.
func (*Broadcast2) Descriptor() ([]byte, []int) {
	return file_proto_cmp_keygen_proto_rawDescGZIP(), []int{0}
}

func (x *Broadcast2) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

type Broadcast3 struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	RID   []byte                 `protobuf:"bytes,1,opt,name=RID,proto3" json:"RID,omitempty"`
	C     []byte                 `protobuf:"bytes,2,opt,name=C,proto3" json:"C,omitempty"` // types.RID
	// VSSPolynomial = Fᵢ(X) VSSPolynomial
	VSSPolynomial []byte `protobuf:"bytes,3,opt,name=VSSPolynomial,proto3" json:"VSSPolynomial,omitempty"` // should check the Degree.
	// SchnorrCommitments = Aᵢ Schnorr commitment for the final confirmation
	SchnorrCommitments []byte `protobuf:"bytes,4,opt,name=SchnorrCommitments,proto3" json:"SchnorrCommitments,omitempty"` //*zksch.Commitment
	ElGamalPublic      []byte `protobuf:"bytes,5,opt,name=ElGamalPublic,proto3" json:"ElGamalPublic,omitempty"`
	// N Paillier and Pedersen N = p•q, p ≡ q ≡ 3 mod 4
	N []byte `protobuf:"bytes,6,opt,name=N,proto3" json:"N,omitempty"` //*saferith.Modulus ;
	// S = r² mod N
	S []byte `protobuf:"bytes,7,opt,name=S,proto3" json:"S,omitempty"` // *saferith.Nat
	// T = Sˡ mod N
	T []byte `protobuf:"bytes,8,opt,name=T,proto3" json:"T,omitempty"` // *saferith.Nat
	// Decommitment = uᵢ decommitment bytes
	Decommitment  []byte `protobuf:"bytes,9,opt,name=Decommitment,proto3" json:"Decommitment,omitempty"` // hash.Decommitment
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Broadcast3) Reset() {
	*x = Broadcast3{}
	mi := &file_proto_cmp_keygen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Broadcast3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broadcast3) ProtoMessage() {}

func (x *Broadcast3) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmp_keygen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broadcast3.ProtoReflect.Descriptor instead.
func (*Broadcast3) Descriptor() ([]byte, []int) {
	return file_proto_cmp_keygen_proto_rawDescGZIP(), []int{1}
}

func (x *Broadcast3) GetRID() []byte {
	if x != nil {
		return x.RID
	}
	return nil
}

func (x *Broadcast3) GetC() []byte {
	if x != nil {
		return x.C
	}
	return nil
}

func (x *Broadcast3) GetVSSPolynomial() []byte {
	if x != nil {
		return x.VSSPolynomial
	}
	return nil
}

func (x *Broadcast3) GetSchnorrCommitments() []byte {
	if x != nil {
		return x.SchnorrCommitments
	}
	return nil
}

func (x *Broadcast3) GetElGamalPublic() []byte {
	if x != nil {
		return x.ElGamalPublic
	}
	return nil
}

func (x *Broadcast3) GetN() []byte {
	if x != nil {
		return x.N
	}
	return nil
}

func (x *Broadcast3) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *Broadcast3) GetT() []byte {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *Broadcast3) GetDecommitment() []byte {
	if x != nil {
		return x.Decommitment
	}
	return nil
}

type Message4 struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Share = Encᵢ(x) is the encryption of the receivers share
	Share         []byte `protobuf:"bytes,1,opt,name=share,proto3" json:"share,omitempty"` // *paillier.Ciphertext
	Fac           []byte `protobuf:"bytes,2,opt,name=Fac,proto3" json:"Fac,omitempty"`     // *zkfac.Proof
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message4) Reset() {
	*x = Message4{}
	mi := &file_proto_cmp_keygen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message4) ProtoMessage() {}

func (x *Message4) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmp_keygen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message4.ProtoReflect.Descriptor instead.
func (*Message4) Descriptor() ([]byte, []int) {
	return file_proto_cmp_keygen_proto_rawDescGZIP(), []int{2}
}

func (x *Message4) GetShare() []byte {
	if x != nil {
		return x.Share
	}
	return nil
}

func (x *Message4) GetFac() []byte {
	if x != nil {
		return x.Fac
	}
	return nil
}

type Broadcast4 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mod           []byte                 `protobuf:"bytes,1,opt,name=Mod,proto3" json:"Mod,omitempty"` // *zkmod.Proof
	Prm           []byte                 `protobuf:"bytes,2,opt,name=Prm,proto3" json:"Prm,omitempty"` // *zkprm.Proof
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Broadcast4) Reset() {
	*x = Broadcast4{}
	mi := &file_proto_cmp_keygen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Broadcast4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broadcast4) ProtoMessage() {}

func (x *Broadcast4) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmp_keygen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broadcast4.ProtoReflect.Descriptor instead.
func (*Broadcast4) Descriptor() ([]byte, []int) {
	return file_proto_cmp_keygen_proto_rawDescGZIP(), []int{3}
}

func (x *Broadcast4) GetMod() []byte {
	if x != nil {
		return x.Mod
	}
	return nil
}

func (x *Broadcast4) GetPrm() []byte {
	if x != nil {
		return x.Prm
	}
	return nil
}

type Broadcast5 struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SchnorrResponse []byte                 `protobuf:"bytes,1,opt,name=SchnorrResponse,proto3" json:"SchnorrResponse,omitempty"` // *zksch.Response
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Broadcast5) Reset() {
	*x = Broadcast5{}
	mi := &file_proto_cmp_keygen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Broadcast5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broadcast5) ProtoMessage() {}

func (x *Broadcast5) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmp_keygen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broadcast5.ProtoReflect.Descriptor instead.
func (*Broadcast5) Descriptor() ([]byte, []int) {
	return file_proto_cmp_keygen_proto_rawDescGZIP(), []int{4}
}

func (x *Broadcast5) GetSchnorrResponse() []byte {
	if x != nil {
		return x.SchnorrResponse
	}
	return nil
}

var File_proto_cmp_keygen_proto protoreflect.FileDescriptor

const file_proto_cmp_keygen_proto_rawDesc = "" +
	"\n" +
	"\x16proto/cmp-keygen.proto\x12\x10xlabs.cmp.keygen\",\n" +
	"\n" +
	"Broadcast2\x12\x1e\n" +
	"\n" +
	"Commitment\x18\x01 \x01(\fR\n" +
	"Commitment\"\xf6\x01\n" +
	"\n" +
	"Broadcast3\x12\x10\n" +
	"\x03RID\x18\x01 \x01(\fR\x03RID\x12\f\n" +
	"\x01C\x18\x02 \x01(\fR\x01C\x12$\n" +
	"\rVSSPolynomial\x18\x03 \x01(\fR\rVSSPolynomial\x12.\n" +
	"\x12SchnorrCommitments\x18\x04 \x01(\fR\x12SchnorrCommitments\x12$\n" +
	"\rElGamalPublic\x18\x05 \x01(\fR\rElGamalPublic\x12\f\n" +
	"\x01N\x18\x06 \x01(\fR\x01N\x12\f\n" +
	"\x01S\x18\a \x01(\fR\x01S\x12\f\n" +
	"\x01T\x18\b \x01(\fR\x01T\x12\"\n" +
	"\fDecommitment\x18\t \x01(\fR\fDecommitment\"2\n" +
	"\bMessage4\x12\x14\n" +
	"\x05share\x18\x01 \x01(\fR\x05share\x12\x10\n" +
	"\x03Fac\x18\x02 \x01(\fR\x03Fac\"0\n" +
	"\n" +
	"Broadcast4\x12\x10\n" +
	"\x03Mod\x18\x01 \x01(\fR\x03Mod\x12\x10\n" +
	"\x03Prm\x18\x02 \x01(\fR\x03Prm\"6\n" +
	"\n" +
	"Broadcast5\x12(\n" +
	"\x0fSchnorrResponse\x18\x01 \x01(\fR\x0fSchnorrResponseB\x16Z\x14protocols/cmp/keygenb\x06proto3"

var (
	file_proto_cmp_keygen_proto_rawDescOnce sync.Once
	file_proto_cmp_keygen_proto_rawDescData []byte
)

func file_proto_cmp_keygen_proto_rawDescGZIP() []byte {
	file_proto_cmp_keygen_proto_rawDescOnce.Do(func() {
		file_proto_cmp_keygen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_cmp_keygen_proto_rawDesc), len(file_proto_cmp_keygen_proto_rawDesc)))
	})
	return file_proto_cmp_keygen_proto_rawDescData
}

var file_proto_cmp_keygen_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_cmp_keygen_proto_goTypes = []any{
	(*Broadcast2)(nil), // 0: xlabs.cmp.keygen.Broadcast2
	(*Broadcast3)(nil), // 1: xlabs.cmp.keygen.Broadcast3
	(*Message4)(nil),   // 2: xlabs.cmp.keygen.Message4
	(*Broadcast4)(nil), // 3: xlabs.cmp.keygen.Broadcast4
	(*Broadcast5)(nil), // 4: xlabs.cmp.keygen.Broadcast5
}
var file_proto_cmp_keygen_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_cmp_keygen_proto_init() }
func file_proto_cmp_keygen_proto_init() {
	if File_proto_cmp_keygen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_cmp_keygen_proto_rawDesc), len(file_proto_cmp_keygen_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_cmp_keygen_proto_goTypes,
		DependencyIndexes: file_proto_cmp_keygen_proto_depIdxs,
		MessageInfos:      file_proto_cmp_keygen_proto_msgTypes,
	}.Build()
	File_proto_cmp_keygen_proto = out.File
	file_proto_cmp_keygen_proto_goTypes = nil
	file_proto_cmp_keygen_proto_depIdxs = nil
}
