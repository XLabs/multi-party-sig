// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/cmp-signing.proto

package sign

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Broadcast2 struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// K = Kᵢ
	K []byte `protobuf:"bytes,1,opt,name=K,proto3" json:"K,omitempty"`
	// G = Gᵢ
	G             []byte `protobuf:"bytes,2,opt,name=G,proto3" json:"G,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Broadcast2) Reset() {
	*x = Broadcast2{}
	mi := &file_proto_cmp_signing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Broadcast2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broadcast2) ProtoMessage() {}

func (x *Broadcast2) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmp_signing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broadcast2.ProtoReflect.Descriptor instead.
func (*Broadcast2) Descriptor() ([]byte, []int) {
	return file_proto_cmp_signing_proto_rawDescGZIP(), []int{0}
}

func (x *Broadcast2) GetK() []byte {
	if x != nil {
		return x.K
	}
	return nil
}

func (x *Broadcast2) GetG() []byte {
	if x != nil {
		return x.G
	}
	return nil
}

type Message2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProofEnc      []byte                 `protobuf:"bytes,1,opt,name=ProofEnc,proto3" json:"ProofEnc,omitempty"` // *zkenc.Proof
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message2) Reset() {
	*x = Message2{}
	mi := &file_proto_cmp_signing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message2) ProtoMessage() {}

func (x *Message2) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmp_signing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message2.ProtoReflect.Descriptor instead.
func (*Message2) Descriptor() ([]byte, []int) {
	return file_proto_cmp_signing_proto_rawDescGZIP(), []int{1}
}

func (x *Message2) GetProofEnc() []byte {
	if x != nil {
		return x.ProofEnc
	}
	return nil
}

var File_proto_cmp_signing_proto protoreflect.FileDescriptor

const file_proto_cmp_signing_proto_rawDesc = "" +
	"\n" +
	"\x17proto/cmp-signing.proto\x12\x0exlabs.cmp.sign\"(\n" +
	"\n" +
	"Broadcast2\x12\f\n" +
	"\x01K\x18\x01 \x01(\fR\x01K\x12\f\n" +
	"\x01G\x18\x02 \x01(\fR\x01G\"&\n" +
	"\bMessage2\x12\x1a\n" +
	"\bProofEnc\x18\x01 \x01(\fR\bProofEncB\x14Z\x12protocols/cmp/signb\x06proto3"

var (
	file_proto_cmp_signing_proto_rawDescOnce sync.Once
	file_proto_cmp_signing_proto_rawDescData []byte
)

func file_proto_cmp_signing_proto_rawDescGZIP() []byte {
	file_proto_cmp_signing_proto_rawDescOnce.Do(func() {
		file_proto_cmp_signing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_cmp_signing_proto_rawDesc), len(file_proto_cmp_signing_proto_rawDesc)))
	})
	return file_proto_cmp_signing_proto_rawDescData
}

var file_proto_cmp_signing_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_cmp_signing_proto_goTypes = []any{
	(*Broadcast2)(nil), // 0: xlabs.cmp.sign.Broadcast2
	(*Message2)(nil),   // 1: xlabs.cmp.sign.Message2
}
var file_proto_cmp_signing_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_cmp_signing_proto_init() }
func file_proto_cmp_signing_proto_init() {
	if File_proto_cmp_signing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_cmp_signing_proto_rawDesc), len(file_proto_cmp_signing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_cmp_signing_proto_goTypes,
		DependencyIndexes: file_proto_cmp_signing_proto_depIdxs,
		MessageInfos:      file_proto_cmp_signing_proto_msgTypes,
	}.Build()
	File_proto_cmp_signing_proto = out.File
	file_proto_cmp_signing_proto_goTypes = nil
	file_proto_cmp_signing_proto_depIdxs = nil
}
